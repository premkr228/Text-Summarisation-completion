# -*- coding: utf-8 -*-
"""LLM_Design_02.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ekgF4M2hEEga1TGKXMExYln3qxJy31fa
"""

!pip install -q gradio
!pip install -q torch
!pip install -q transformers

import gradio as gr
from transformers import GPT2Tokenizer, GPT2LMHeadModel

# Initialize the tokenizer and model
tokenizer = GPT2Tokenizer.from_pretrained("gpt2-xl")
model = GPT2LMHeadModel.from_pretrained("gpt2-xl")

# LLM For Text summarization

def text_summarization(text):
    try:
        inputs = tokenizer.encode("summarize: " + text, return_tensors="pt", max_length=1024, truncation=True)
        outputs = model.generate(inputs, max_length=300, min_length=40, length_penalty=2.0, num_beams=4, no_repeat_ngram_size=2, early_stopping=True)
        summary = tokenizer.decode(outputs[0], skip_special_tokens=True, clean_up_tokenization_spaces=True)
        return ".".join(summary.split(".")[:-1]) + "."
    except Exception as e:
        print("Error generating summary:", e)
        return None

output_text1 = gr.Textbox()
gr.Interface(text_summarization, "textbox", output_text1, title="GPT-2",
             description="OpenAI's GPT-2 is an unsupervised language model that can generate coherent text. Go ahead and input a sentence and see what it completes it with!",
             examples=["I enjoy"]).launch()

# LLM For Text completion

def text_completion(prefix):
    inputs = tokenizer.encode(prefix, return_tensors="pt", max_length=1024, truncation=True)
    outputs = model.generate(inputs, max_length=100, num_return_sequences=3, num_beams=5, temperature=0.8, top_p=0.9, no_repeat_ngram_size=20)

    # Process outputs to remove unwanted characters and formatting
    completions = []
    for output in outputs:
        completion = tokenizer.decode(output, skip_special_tokens=True)
        completion = completion.strip()
        completion = completion.replace("\n", " ")
        completion = completion.replace("\xa0", "")
        completions.append(completion)

    return completions

output_text2 = gr.Textbox()
gr.Interface(text_completion, "textbox", output_text2, title="GPT-2",
             description="OpenAI's GPT-2 is an unsupervised language model that can generate coherent text. Go ahead and input a sentence and see what it completes it with!",
             examples=["I am happy"]).launch()